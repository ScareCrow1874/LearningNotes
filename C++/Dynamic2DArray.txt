2-D array in C++:
 declare: (dynamic 2-D array is basically an array of pointers to arrays)
 
  int **ary = new int*[sizeY];
  for(int i = 0; i < sizeY; ++i) {
      ary[i] = new int[sizeX];
  }

 For cleanup:

  for(int i = 0; i < sizeY; ++i) {
      delete [] ary[i];
  }
  delete [] ary;

 For a less memory-using method, use math to compute the index:
 
  int *ary = new int[sizeX*sizeY];

  // ary[i][j] is then rewritten as
  ary[i*sizeY+j]

There are three ways to pass a 2D array to a function:
1, The parameter is a 2D array
int array[10][10];
void passFunc(int a[][10])
{
    // ...
}
passFunc(array);
2, The parameter is an array containing pointers
int *array[10];
for(int i = 0; i < 10; i++)
    array[i] = new int[10];
void passFunc(int *a[10]) //array containing pointers
{
    // ...
}
passFunc(array); 
3, The parameter is a pointer to a pointer
int **array;
array = new int *[10];
for(int i = 0; i <10; i++)
    array[i] = new int[10];
void passFunc(int **a)
{
    // ...
}
passFunc(array); 

My question:

How to explicitly declare a 2D array?
How to pass a 2D array to a function?
How about doing that in header/src files?